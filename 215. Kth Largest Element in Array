Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth 
distinct element.

For example,
Given [3,2,1,5,6,4] and k = 2, return 5.

Note: 
You may assume k is always valid, 1 ≤ k ≤ array's length.

solution1: O(NlogN) time, O(1) space
public class Solution {
    public int findKthLargest(int[] nums, int k) {
        Arrays.sort(nums);
        int len = nums.length;
        return nums[len - k];
    }
}

solution2: O(NlogK) time, O(K) space
public class Solution {
    public int findKthLargest(int[] nums, int k) {
        PriorityQueue<Integer> queue = new PriorityQueue<>();
        for(int n : nums) {
            queue.offer(n);
            
        if(queue.size() > k) {
            queue.poll();
            }
        }
        return queue.peek();
    }
}


solution3:




